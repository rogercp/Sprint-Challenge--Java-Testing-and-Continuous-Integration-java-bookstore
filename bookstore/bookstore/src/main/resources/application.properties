
server.port=${PORT:2025}


#h2 config
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

##postgresql config
#spring.datasource.url=jdbc:postgresql://localhost:5432/dbbookstore
#spring.datasource.username=postgres
#spring.datasource.password=${MYDBPASSWORD:pazzword}
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.datasource.url=${SPRING_DATA_URL:jdbc:postgresql://ec2-50-19-254-63.compute-1.amazonaws.com:5432/de3i985kroq1us?user=nllhaqvplazcbz&password=5c4dd7540419054d576109a64ed573861b566435125b6823068d1f7950679ddb&sslmode=require}
spring.datasource.username=nllhaqvplazcbz
spring.datasource.password=${MYDBPASSWORD:5c4dd7540419054d576109a64ed573861b566435125b6823068d1f7950679ddb}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=none

#data.sql never/always
spring.datasource.initialization-mode=never

#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.fail-on-empty-beans=false

server.error.whitelabel.enabled=false

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
